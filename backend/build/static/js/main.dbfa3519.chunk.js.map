{"version":3,"sources":["services/names.js","components/NameList.js","App.js","index.js"],"names":["axios","get","NameList","props","useState","names","setNames","value","setValue","order","setOrder","showBtn","setShowBtn","fadeIn","setFadeIn","showNames","sort","a","b","amount","name","filter","n","toLowerCase","includes","toLocaleLowerCase","total","reduce","obj","Navbar","color","light","expand","NavbarBrand","href","Container","Fade","in","tag","className","Row","Col","xs","Input","placeholder","type","onChange","target","ButtonGroup","Button","outline","onClick","newNames","map","setTimeout","addMikko","Table","size","responsive","App","useEffect","nameService","then","res","data","Spinner","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAMe,EAJA,WACX,OAAOA,IAAMC,IAAI,oC,gGCoHNC,EApHE,SAACC,GAAW,IAAD,EACEC,mBAASD,EAAME,OADjB,mBACjBA,EADiB,KACVC,EADU,OAEEF,mBAAS,IAFX,mBAEjBG,EAFiB,KAEVC,EAFU,OAGEJ,mBAAS,QAHX,mBAGjBK,EAHiB,KAGVC,EAHU,OAIMN,oBAAS,GAJf,mBAIjBO,EAJiB,KAIRC,EAJQ,OAKIR,oBAAS,GALb,mBAKjBS,EALiB,KAKTC,EALS,KAgBpBC,EAAsB,WAAVN,EACdJ,EAAMW,MAAK,SAACC,EAAEC,GAAH,OAASA,EAAEC,OAASF,EAAEE,UACjCd,EAAMW,MARQ,SAACC,EAAGC,GAClB,OAAID,EAAEG,KAAOF,EAAEE,MAAc,EACzBH,EAAEG,KAAOF,EAAEE,KAAa,EACrB,KAOTL,EAAsB,KAAVR,EACVF,EACAA,EAAMgB,QAAO,SAAAC,GAAC,OAAIA,EAAEF,KAAKG,cACxBC,SAASjB,EAAMkB,wBAElB,IAIMC,EAAQX,EAAUY,QAAO,SAACD,EAAOE,GAAR,OAAgBA,EAAIT,OAASO,IAAM,GA2BlE,OACE,gCACA,cAACG,EAAA,EAAD,CAAQC,MAAM,QAAQC,OAAK,EAACC,OAAO,KAAnC,SACE,cAACC,EAAA,EAAD,CAAaC,KAAK,IAAlB,gCAEE,eAACC,EAAA,EAAD,WACCtB,EACD,8BACE,cAACuB,EAAA,EAAD,CAAMC,GAAIxB,EAAQyB,IAAI,KAAKC,UAAU,OAArC,sMAMF,GACA,cAACC,EAAA,EAAD,UACF,cAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,SACA,cAACC,EAAA,EAAD,CAAOC,YAAY,eAAeC,KAAK,OACrCC,SAAU,SAACvC,GAhDfC,EAgD4CD,EAhD7BwC,OAAOxC,cAqDpB,eAACyC,EAAA,EAAD,WACA,cAACC,EAAA,EAAD,CAAQC,SAAO,EAACpB,MAAM,OAAOqB,QAAS,kBAAMzC,EAAS,SAArD,0BAGU,cAACuC,EAAA,EAAD,CAAQC,SAAO,EAACpB,MAAM,OAAOqB,QAAS,kBAAMzC,EAAS,WAArD,4BAGGC,GACX,cAACsC,EAAA,EAAD,CAAQC,SAAO,EAACpB,MAAM,OAAOqB,QAAS,kBAxD3B,WACf,IAAMC,EAAW/C,EAAMgD,KAAI,SAAC/B,GAC1B,MAAe,UAAXA,EAAEF,KACU,2BACTE,GADS,IAEZH,OAAQG,EAAEH,OAAO,IAMdG,KAGThB,EAAS8C,GACTxC,GAAW,GACXE,GAAU,GACVwC,YAAW,WACTxC,GAAU,KACT,KAqC6CyC,IAA5C,+CAMA,cAACC,EAAA,EAAD,CAAOC,KAAK,KAAKC,YAAU,EAA3B,SACA,kCACI,+BACE,sCAGA,0CACShC,EADT,gBAIDX,EAAUsC,KAAI,SAAAjC,GAAI,OACjB,+BACE,6BAAKA,EAAKA,OACV,6BAAKA,EAAKD,WAFHC,EAAKA,qB,QCzEfuC,EAzBH,WAAO,IAAD,EACUvD,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,KAWhB,OARAsD,qBAAU,WACRC,IAEGC,MAAK,SAAAC,GACJzD,EAASyD,EAAIC,KAAK3D,YAErB,IAEGA,EAOJ,8BACA,cAAC,EAAD,CAAUA,MAAOA,MANf,cAAC4D,EAAA,EAAD,CAASR,KAAK,KAAK3B,MAAM,a,MCjB/BoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.dbfa3519.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst getAll = () => {\n    return axios.get('http://localhost:3001/api/names')\n}\n\nexport default { getAll }","import React, { useState } from 'react';\nimport { Button, ButtonGroup, Container, Fade, Row, Col, Table, Input, Navbar, NavbarBrand } from 'reactstrap';\n\nconst NameList = (props) => {\n    const [names, setNames] = useState(props.names)\n    const [value, setValue] = useState('')\n    const [order, setOrder] = useState('name')\n    const [showBtn, setShowBtn] = useState(true)\n    const [fadeIn, setFadeIn] = useState(false);\n\n\n\n\n    const compare = (a, b) => {\n      if (a.name < b.name) return -1\n      if (a.name > b.name) return 1\n      return 0\n    }\n\n    let showNames = order === 'amount'\n    ? names.sort((a,b) => b.amount - a.amount)\n    : names.sort(compare)\n\n    showNames = value === ''\n    ? names\n    : names.filter(n => n.name.toLowerCase()\n      .includes(value.toLocaleLowerCase()))\n\n    const handleSearchChange = (event) => {\n      setValue(event.target.value)\n    }\n\n    const total = showNames.reduce((total, obj) => obj.amount + total,0)\n\n    const addMikko = () => {\n      const newNames = names.map((n) => {\n        if (n.name === 'Mikko') {\n          const newMikko = {\n            ...n,\n            amount: n.amount+1\n          }\n\n          return newMikko\n        }\n\n        return n\n      })\n    \n      setNames(newNames)\n      setShowBtn(false)\n      setFadeIn(true)\n      setTimeout(() => {\n        setFadeIn(false)\n      }, 10000)\n    }\n\n\n\n\n    return (\n      <div>\n      <Navbar color=\"light\" light expand=\"md\">\n        <NavbarBrand href=\"/\">Name application</NavbarBrand>\n        </Navbar>\n          <Container>\n          {fadeIn ?\n          <div>\n            <Fade in={fadeIn} tag=\"h5\" className=\"mt-3\">\n                Thank you so much, I'm glad to join you as Solitas 20th Mikko! \n                Unfotunately I'll disapear when you refresh the page.\n                If you think this is a bug, please get in touch and let's fix it!\n            </Fade>\n        </div>\n        : '' }\n          <Row>\n        <Col xs=\"4\">\n        <Input placeholder=\"Search names\" type=\"text\" \n          onChange={(value) => handleSearchChange(value)} />         \n        </Col>\n      </Row>\n\n\n        <ButtonGroup>\n        <Button outline color=\"info\" onClick={() => setOrder('name')}>\n                    Sort by name\n                  </Button>\n                  <Button outline color=\"info\" onClick={() => setOrder('amount')}>\n                      Sort by amount\n                    </Button>\n                    {showBtn &&\n          <Button outline color=\"info\" onClick={() => addMikko()}>\n            I like this app, you're hired!\n          </Button>\n        }\n\n            </ButtonGroup>\n          <Table size=\"sm\" responsive>\n          <thead>\n              <tr>\n                <th>\n                name\n                </th>\n                <th>\n                amount ({total} total)\n                </th>\n              </tr>\n              {showNames.map(name =>\n                <tr key={name.name}>\n                  <td>{name.name}</td>\n                  <td>{name.amount}</td>\n                </tr>\n              )}\n          </thead>\n        </Table>\n        </Container>\n      </div>\n    )\n}\n\nexport default NameList","\nimport nameService from './services/names'\nimport React, { useState, useEffect } from 'react';\nimport './Styles.css';\nimport NameList from './components/NameList'\nimport { Spinner } from 'reactstrap';\n\n\n\nconst App = () => {\n  const [names, setNames] = useState('')\n\n  useEffect(() => {\n    nameService\n      .getAll()\n      .then(res => {\n        setNames(res.data.names)\n      })\n  }, [])\n\n  if  (!names) {\n    return (\n      <Spinner size=\"sm\" color=\"primary\" />\n    )\n  }\n\n  return (\n    <div>\n    <NameList names={names} />      \n    </div>\n  )\n\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}